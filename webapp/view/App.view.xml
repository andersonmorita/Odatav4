<mvc:View
	controllerName="sap.ui.core.tutorial.odatav4.controller.App"
	xmlns="sap.m"
	xmlns:mvc="sap.ui.core.mvc"
	displayBlock="true">
	<App busy="{appView>/busy}" class="sapUiSizeCompact">
		<pages>
			<Page title="{i18n>peoplePageTitle}">
				<headerContent> <!--step 8: Our OData service provides one OData operation: the ResetDataSource action. In this step, we add a button that resets all data changes we made during the tutorial to their original state using this action.-->
					<Button
						id="resetChangesButton"
						text="{i18n>resetChangesButtonText}"
						enabled="{= !${appView>/hasUIChanges}}"
						press="onResetDataSource"
						type="Emphasized">
					</Button>
				</headerContent>
				
				<content>
					<Table
						id="peopleList"
						growing="true"
						growingThreshold="10"
						items="{
							path: '/People',
							parameters: {    
								$count: true,
								$$updateGroupId : 'peopleGroup' 
							}
						}"
						mode="SingleSelectLeft"> <!--step 7 (In this step, we make it possible to delete user data.) mode="SingleSelectLeft"-->
						<!--step 6: without that line does not work $$updateGroupId : 'peopleGroup' the screen does not open up new line-->
						<!--Step 2: Data Access and Client-Server Communication-->
						<!--Step 4: "$count: true" was inserted-->
						
						<headerToolbar> 
							<OverflowToolbar>
								<content>
									<ToolbarSpacer/>
									<!--Step 4: inicio-->
									<SearchField  
										id="searchField"
										width="20%"
										placeholder="{i18n>searchFieldPlaceholder}"
										enabled="{= !${appView>/hasUIChanges}}"
										search="onSearch"/>									
									<!--Step 4: fim-->
									<!--Step 6: Create and Edit-->
									<Button
										id="addUserButton"
										icon="sap-icon://add"
										tooltip="{i18n>createButtonText}"
										enabled="{= !${appView>/hasUIChanges}}"
										press="onCreate">
										<layoutData>
											<OverflowToolbarLayoutData priority="NeverOverflow"/>
										</layoutData>
									</Button> <!--Step 6: Create and Edit-->
									<!--Step 7: Delete(In this step, we make it possible to delete user data.)-->
									<Button
										id="deleteUserButton"
										icon="sap-icon://delete"
										tooltip="{i18n>deleteButtonText}"
										enabled="{= !${appView>/hasUIChanges}}"
										press="onDelete">
										<layoutData>
											<OverflowToolbarLayoutData priority="NeverOverflow"/>
										</layoutData>
									</Button> <!--Step 7: Delete-->
										
									<Button
											id="refreshUsersButton"
											icon="sap-icon://refresh"
											enabled="{= !${appView>/hasUIChanges}}" 
											tooltip="{i18n>refreshButtonText}"
											press="onRefresh"/>
									<!--Step 4: inicio--> <!--step 6 enabled="{= !${appView>/hasUIChanges}}"-->
									<Button
										id="sortUsersButton"
										press="onSort"
										enabled="{= !${appView>/hasUIChanges}}"
										tooltip="{i18n>sortButtonText}"
										icon="sap-icon://sort"/>
									<!--Step 4: fim-->
								</content>
							</OverflowToolbar>
						</headerToolbar>			
						<!--end step 2-->
						<columns>
							<Column id="userNameColumn">
								<Text text="{i18n>userNameLabelText}"/>
							</Column>
							<Column id="firstNameColumn">
								<Text text="{i18n>firstNameLabelText}"/>
							</Column>
							<Column id="lastNameColumn">
								<Text text="{i18n>lastNameLabelText}"/>
							</Column>
							<Column id="ageColumn">
								<Text text="{i18n>ageLabelText}"/>
							</Column>
						</columns>
						<items>
							<ColumnListItem>
								<cells>
									<Input value="{UserName}"
									valueLiveUpdate="true"
									liveChange="onInputChange"/> <!--step 6 get any change in that field combined with event onInputChange on file app.controller.js-->
								</cells>
								<cells>
									<Input value="{FirstName}"
									liveChange="onInputChange"/> <!--step 6-->
								</cells>
								<cells>
									<Input value="{LastName}"
									liveChange="onInputChange"/> <!--step 6-->
								</cells>
								<cells>
									<Input value="{Age}"
									valueLiveUpdate="true"
										liveChange="onInputChange"/> <!--step 6-->
								</cells>
							</ColumnListItem>
						</items>
					</Table>
				</content>
				<footer><!--inicio step 6-->
					<Toolbar visible="{appView>/hasUIChanges}">
						<ToolbarSpacer/>
						<Button
							id="saveButton"
							type="Emphasized"
							text="{i18n>saveButtonText}"
							enabled="{= ${message>/}.length === 0 &amp;&amp; ${appView>/usernameEmpty} === false }"
							press="onSave"/>
						<Button
							id="doneButton"
							text="{i18n>cancelButtonText}"
							press="onResetChanges"/>
					</Toolbar>
				</footer> <!--fim step 6-->
			</Page>
		</pages>
	</App>
</mvc:View>